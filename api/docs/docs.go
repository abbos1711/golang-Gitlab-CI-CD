// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/login": {
            "post": {
                "description": "This api can login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.LoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/daily": {
            "post": {
                "description": "Create attendence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily"
                ],
                "summary": "Create attendance",
                "parameters": [
                    {
                        "description": "request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DailyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DailyRes"
                        }
                    }
                }
            }
        },
        "/v1/daily/portion": {
            "get": {
                "description": "Get attendance portion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily"
                ],
                "summary": "Get attendance portion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AttendancePortion"
                        }
                    }
                }
            }
        },
        "/v1/file-upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "File upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-upload"
                ],
                "summary": "File upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/get-workers-by-month/{date}": {
            "get": {
                "description": "This function gets all workers by date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worker-History"
                ],
                "summary": "Get all workers by date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkersByMonthResp"
                        }
                    }
                }
            }
        },
        "/v1/worker": {
            "post": {
                "description": "Create worker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worker"
                ],
                "summary": "Create worker",
                "parameters": [
                    {
                        "description": "worker",
                        "name": "worker",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WorkerCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkerResp"
                        }
                    }
                }
            }
        },
        "/v1/worker/update": {
            "post": {
                "description": "This finction updates worker by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker",
                "parameters": [
                    {
                        "description": "worker",
                        "name": "worker",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WorkerUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOk"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/worker/{id}": {
            "get": {
                "description": "This finction gets worker by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worker"
                ],
                "summary": "Get worker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WorkerResp"
                        }
                    }
                }
            },
            "delete": {
                "description": "This finction deletes worker by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worker"
                ],
                "summary": "Delete worker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOk"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/workers": {
            "get": {
                "description": "This function gets all workerers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worker"
                ],
                "summary": "Get all workers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AllWorkers"
                        }
                    }
                }
            }
        },
        "/v1/workers/at-work": {
            "get": {
                "description": "This function gets all workerers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worker"
                ],
                "summary": "Get workers at work",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AllWorkersFilter"
                        }
                    }
                }
            }
        },
        "/v1/workers/{gender}": {
            "get": {
                "description": "This function gets all workerers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worker"
                ],
                "summary": "Get workers by gender",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gender",
                        "name": "gender",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AllWorkersFilter"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AllWorkers": {
            "type": "object",
            "properties": {
                "female": {
                    "type": "integer"
                },
                "male": {
                    "type": "integer"
                },
                "total_amount": {
                    "type": "integer"
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkerResp"
                    }
                }
            }
        },
        "models.AllWorkersFilter": {
            "type": "object",
            "properties": {
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkerResp"
                    }
                }
            }
        },
        "models.AttendancePortion": {
            "type": "object",
            "properties": {
                "portion": {
                    "type": "number"
                }
            }
        },
        "models.DailyReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "models.DailyRes": {
            "type": "object",
            "properties": {
                "comeTime": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "leaveTime": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "workDuration": {
                    "type": "string"
                },
                "workerId": {
                    "type": "string"
                }
            }
        },
        "models.LoginReq": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.LoginRes": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.ResponseError": {
            "type": "object",
            "properties": {
                "error": {}
            }
        },
        "models.ResponseOk": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                }
            }
        },
        "models.WorkerCreate": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "come_time": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "models.WorkerResp": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "come_time": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.WorkerUpdate": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "come_time": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "models.WorkersByMonth": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "middle_come_time": {
                    "type": "string"
                },
                "middle_leave_time": {
                    "type": "string"
                },
                "middle_work_hours_month": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "work_day_month": {
                    "type": "string"
                }
            }
        },
        "models.WorkersByMonthResp": {
            "type": "object",
            "properties": {
                "workers_resp": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkersByMonth"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "Created by Otajonov Quvonchbek",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
