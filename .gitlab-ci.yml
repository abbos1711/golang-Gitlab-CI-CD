stages:
  - build
  - deploy

build-image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  only:
    - main

deploy:
  stage: deploy
  before_script:
   #- chmod ug+rx $SSH_KEY
   #- chmod 600 /builds/neo_anderson1/test_with_tizim.tmp/SSH_KEY
   #- chmod 600 $SSH_KEY 
   #- chmod 400 $SSH_KEY           
   - chmod 400 /builds/neo_anderson1/test_with_tizim.tmp/SSH_KEY
   - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
   - eval $(ssh-agent -s)
   - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
   - mkdir -p ~/.ssh
   - chmod 700 ~/.ssh
   - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
   - chmod 644 ~/.ssh/known_hosts
   - chmod 600 ~/.ssh/authorized_keys
   
  script:
   #- ssh -o StrictHostKeyChecking=no -i $SSH_KEY ubuntu@$SERVER_IP "
   - ssh -o StrictHostKeyChecking=no -i $SSH_KEY @SSH_USER@$SERVER_IP "
        docker login -u $REGISTRY_USER -p $REGISTRY_PASS && 
        docker stop $CONTAINER_NAME || true &&
        docker rm $CONTAINER_NAME || true &&
        docker image rm $IMAGE_NAME || true &&
        docker run --name $CONTAINER_NAME  
        -e POSTGRES_HOST=$POSTGRES_HOST -e POSTGRES_DATABASE=$POSTGRES_DATABASE -e POSTGRES_USER=$POSTGRES_USER 
        -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD 
        -d -p 8000:8000  $IMAGE_NAME:$IMAGE_TAG"
  only:
    - main

